[Trace - 9:28:21 AM] Sending request 'initialize - (0)'.
Params: {
    "processId": 841,
    "clientInfo": {
        "name": "Visual Studio Code",
        "version": "1.76.2"
    },
    "locale": "en",
    "rootPath": "/home/tanguy/MotokoSanSandbox",
    "rootUri": "file:///home/tanguy/MotokoSanSandbox",
    "capabilities": {
        "workspace": {
            "applyEdit": true,
            "workspaceEdit": {
                "documentChanges": true,
                "resourceOperations": [
                    "create",
                    "rename",
                    "delete"
                ],
                "failureHandling": "textOnlyTransactional",
                "normalizesLineEndings": true,
                "changeAnnotationSupport": {
                    "groupsOnLabel": true
                }
            },
            "configuration": true,
            "didChangeWatchedFiles": {
                "dynamicRegistration": true,
                "relativePatternSupport": true
            },
            "symbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "resolveSupport": {
                    "properties": [
                        "location.range"
                    ]
                }
            },
            "codeLens": {
                "refreshSupport": true
            },
            "executeCommand": {
                "dynamicRegistration": true
            },
            "didChangeConfiguration": {
                "dynamicRegistration": true
            },
            "workspaceFolders": true,
            "semanticTokens": {
                "refreshSupport": true
            },
            "fileOperations": {
                "dynamicRegistration": true,
                "didCreate": true,
                "didRename": true,
                "didDelete": true,
                "willCreate": true,
                "willRename": true,
                "willDelete": true
            },
            "inlineValue": {
                "refreshSupport": true
            },
            "inlayHint": {
                "refreshSupport": true
            },
            "diagnostics": {
                "refreshSupport": true
            }
        },
        "textDocument": {
            "publishDiagnostics": {
                "relatedInformation": true,
                "versionSupport": false,
                "tagSupport": {
                    "valueSet": [
                        1,
                        2
                    ]
                },
                "codeDescriptionSupport": true,
                "dataSupport": true
            },
            "synchronization": {
                "dynamicRegistration": true,
                "willSave": true,
                "willSaveWaitUntil": true,
                "didSave": true
            },
            "completion": {
                "dynamicRegistration": true,
                "contextSupport": true,
                "completionItem": {
                    "snippetSupport": true,
                    "commitCharactersSupport": true,
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "deprecatedSupport": true,
                    "preselectSupport": true,
                    "tagSupport": {
                        "valueSet": [
                            1
                        ]
                    },
                    "insertReplaceSupport": true,
                    "resolveSupport": {
                        "properties": [
                            "documentation",
                            "detail",
                            "additionalTextEdits"
                        ]
                    },
                    "insertTextModeSupport": {
                        "valueSet": [
                            1,
                            2
                        ]
                    },
                    "labelDetailsSupport": true
                },
                "insertTextMode": 2,
                "completionItemKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25
                    ]
                },
                "completionList": {
                    "itemDefaults": [
                        "commitCharacters",
                        "editRange",
                        "insertTextFormat",
                        "insertTextMode"
                    ]
                }
            },
            "hover": {
                "dynamicRegistration": true,
                "contentFormat": [
                    "markdown",
                    "plaintext"
                ]
            },
            "signatureHelp": {
                "dynamicRegistration": true,
                "signatureInformation": {
                    "documentationFormat": [
                        "markdown",
                        "plaintext"
                    ],
                    "parameterInformation": {
                        "labelOffsetSupport": true
                    },
                    "activeParameterSupport": true
                },
                "contextSupport": true
            },
            "definition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "references": {
                "dynamicRegistration": true
            },
            "documentHighlight": {
                "dynamicRegistration": true
            },
            "documentSymbol": {
                "dynamicRegistration": true,
                "symbolKind": {
                    "valueSet": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26
                    ]
                },
                "hierarchicalDocumentSymbolSupport": true,
                "tagSupport": {
                    "valueSet": [
                        1
                    ]
                },
                "labelSupport": true
            },
            "codeAction": {
                "dynamicRegistration": true,
                "isPreferredSupport": true,
                "disabledSupport": true,
                "dataSupport": true,
                "resolveSupport": {
                    "properties": [
                        "edit"
                    ]
                },
                "codeActionLiteralSupport": {
                    "codeActionKind": {
                        "valueSet": [
                            "",
                            "quickfix",
                            "refactor",
                            "refactor.extract",
                            "refactor.inline",
                            "refactor.rewrite",
                            "source",
                            "source.organizeImports"
                        ]
                    }
                },
                "honorsChangeAnnotations": false
            },
            "codeLens": {
                "dynamicRegistration": true
            },
            "formatting": {
                "dynamicRegistration": true
            },
            "rangeFormatting": {
                "dynamicRegistration": true
            },
            "onTypeFormatting": {
                "dynamicRegistration": true
            },
            "rename": {
                "dynamicRegistration": true,
                "prepareSupport": true,
                "prepareSupportDefaultBehavior": 1,
                "honorsChangeAnnotations": true
            },
            "documentLink": {
                "dynamicRegistration": true,
                "tooltipSupport": true
            },
            "typeDefinition": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "implementation": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "colorProvider": {
                "dynamicRegistration": true
            },
            "foldingRange": {
                "dynamicRegistration": true,
                "rangeLimit": 5000,
                "lineFoldingOnly": true,
                "foldingRangeKind": {
                    "valueSet": [
                        "comment",
                        "imports",
                        "region"
                    ]
                },
                "foldingRange": {
                    "collapsedText": false
                }
            },
            "declaration": {
                "dynamicRegistration": true,
                "linkSupport": true
            },
            "selectionRange": {
                "dynamicRegistration": true
            },
            "callHierarchy": {
                "dynamicRegistration": true
            },
            "semanticTokens": {
                "dynamicRegistration": true,
                "tokenTypes": [
                    "namespace",
                    "type",
                    "class",
                    "enum",
                    "interface",
                    "struct",
                    "typeParameter",
                    "parameter",
                    "variable",
                    "property",
                    "enumMember",
                    "event",
                    "function",
                    "method",
                    "macro",
                    "keyword",
                    "modifier",
                    "comment",
                    "string",
                    "number",
                    "regexp",
                    "operator",
                    "decorator"
                ],
                "tokenModifiers": [
                    "declaration",
                    "definition",
                    "readonly",
                    "static",
                    "deprecated",
                    "abstract",
                    "async",
                    "modification",
                    "documentation",
                    "defaultLibrary"
                ],
                "formats": [
                    "relative"
                ],
                "requests": {
                    "range": true,
                    "full": {
                        "delta": true
                    }
                },
                "multilineTokenSupport": false,
                "overlappingTokenSupport": false,
                "serverCancelSupport": true,
                "augmentsSyntaxTokens": true
            },
            "linkedEditingRange": {
                "dynamicRegistration": true
            },
            "typeHierarchy": {
                "dynamicRegistration": true
            },
            "inlineValue": {
                "dynamicRegistration": true
            },
            "inlayHint": {
                "dynamicRegistration": true,
                "resolveSupport": {
                    "properties": [
                        "tooltip",
                        "textEdits",
                        "label.tooltip",
                        "label.location",
                        "label.command"
                    ]
                }
            },
            "diagnostic": {
                "dynamicRegistration": true,
                "relatedDocumentSupport": false
            }
        },
        "window": {
            "showMessage": {
                "messageActionItem": {
                    "additionalPropertiesSupport": true
                }
            },
            "showDocument": {
                "support": true
            },
            "workDoneProgress": true
        },
        "general": {
            "staleRequestSupport": {
                "cancel": true,
                "retryOnContentModified": [
                    "textDocument/semanticTokens/full",
                    "textDocument/semanticTokens/range",
                    "textDocument/semanticTokens/full/delta"
                ]
            },
            "regularExpressions": {
                "engine": "ECMAScript",
                "version": "ES2020"
            },
            "markdown": {
                "parser": "marked",
                "version": "1.1.0"
            },
            "positionEncodings": [
                "utf-16"
            ]
        },
        "notebookDocument": {
            "synchronization": {
                "dynamicRegistration": true,
                "executionSummarySupport": true
            }
        }
    },
    "trace": "verbose",
    "workspaceFolders": [
        {
            "uri": "file:///home/tanguy/MotokoSanSandbox",
            "name": "MotokoSanSandbox"
        }
    ]
}


java:  /usr/lib/jvm/java-11-openjdk-amd64/bin/java
jar:  /home/tanguy/.config/Code/User/globalStorage/viper-admin.viper/Stable/ViperTools/backends/viperserver.jar
z3:  /home/tanguy/.config/Code/User/globalStorage/viper-admin.viper/Stable/ViperTools/z3/bin/z3
[Trace - 9:28:22 AM] Received response 'initialize - (0)' in 1504ms.
Result: {
    "capabilities": {
        "completionProvider": {
            "resolveProvider": false,
            "triggerCharacters": [
                "."
            ]
        },
        "codeActionProvider": true,
        "hoverProvider": true,
        "textDocumentSync": 1,
        "workspace": {
            "workspaceFolders": {
                "supported": true
            }
        }
    }
}


[Trace - 9:28:22 AM] Sending notification 'initialized'.
Params: {}


[Trace - 9:28:22 AM] Sending notification 'textDocument/didOpen'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "languageId": "motoko",
        "version": 1,
        "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 1);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
    }
}


[Trace - 9:28:22 AM] Sending notification 'workspace/didChangeConfiguration'.
Params: {
    "settings": {
        "motoko": {
            "dfx": "dfx",
            "legacyLanguageServer": true,
            "maxNumberOfProblems": 100,
            "hideWarningRegex": "",
            "trace": {
                "server": "verbose"
            },
            "debugHover": true,
            "canister": "MotokoSanSandbox_backend",
            "formatter": "none"
        }
    }
}


[Trace - 9:28:22 AM] Received request 'client/registerCapability - (0)'.
Params: {
    "registrations": [
        {
            "id": "bd0189ae-94d8-461b-8073-7ac660d97876",
            "method": "workspace/didChangeWorkspaceFolders",
            "registerOptions": {}
        }
    ]
}


[Trace - 9:28:22 AM] Sending response 'client/registerCapability - (0)'. Processing request took 1ms
No result returned.


[Trace - 9:28:22 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "* /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


* /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:28:23 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:28:23 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:28:23 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:30:26 AM] Sending request 'textDocument/codeAction - (1)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 14,
            "character": 19
        },
        "end": {
            "line": 14,
            "character": 19
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:30:26 AM] Received response 'textDocument/codeAction - (1)' in 1ms.
Result: []


[Trace - 9:30:42 AM] Sending request 'textDocument/codeAction - (2)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:30:42 AM] Received response 'textDocument/codeAction - (2)' in 1ms.
Result: []


[Trace - 9:30:42 AM] Sending request 'textDocument/codeAction - (3)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 14,
            "character": 19
        },
        "end": {
            "line": 14,
            "character": 19
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:30:42 AM] Received response 'textDocument/codeAction - (3)' in 1ms.
Result: []


[Trace - 9:30:45 AM] Sending request 'textDocument/codeAction - (4)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 7,
            "character": 61
        },
        "end": {
            "line": 7,
            "character": 61
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:30:45 AM] Received response 'textDocument/codeAction - (4)' in 1ms.
Result: []


[Trace - 9:30:46 AM] Sending request 'textDocument/hover - (5)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 32
    }
}


[Trace - 9:30:46 AM] Received response 'textDocument/hover - (5)' in 5ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:30:46 AM] Sending request 'textDocument/codeAction - (6)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 32
        },
        "end": {
            "line": 8,
            "character": 32
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:30:46 AM] Received response 'textDocument/codeAction - (6)' in 1ms.
Result: []


[Trace - 9:30:47 AM] Sending request 'textDocument/hover - (7)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 7,
        "character": 56
    }
}


[Trace - 9:30:47 AM] Received response 'textDocument/hover - (7)' in 2ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:30:47 AM] Sending request 'textDocument/hover - (8)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 7,
        "character": 55
    }
}


[Trace - 9:30:47 AM] Received response 'textDocument/hover - (8)' in 0ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:30:57 AM] Sending request 'textDocument/hover - (9)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 29
    }
}


[Trace - 9:30:57 AM] Received response 'textDocument/hover - (9)' in 3ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:30:57 AM] Sending request 'textDocument/hover - (10)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 39
    }
}


[Trace - 9:30:57 AM] Received response 'textDocument/hover - (10)' in 56ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nactor { claim : shared () -> async () }\n\n```\n\n---\n\n```motoko\n\nVarP [\n  \"ClaimReward\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 2,
            "character": 0
        },
        "end": {
            "line": 23,
            "character": 1
        }
    }
}


[Trace - 9:30:58 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 2
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 12);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:30:58 AM] Sending request 'textDocument/codeAction - (11)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 33
        },
        "end": {
            "line": 8,
            "character": 33
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:30:58 AM] Received response 'textDocument/codeAction - (11)' in 1ms.
Result: []


[Trace - 9:30:58 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:30:58 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:30:58 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:30:58 AM] Sending request 'textDocument/hover - (12)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 40
    }
}


[Trace - 9:30:58 AM] Received response 'textDocument/hover - (12)' in 18ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nactor { claim : shared () -> async () }\n\n```\n\n---\n\n```motoko\n\nVarP [\n  \"ClaimReward\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 2,
            "character": 0
        },
        "end": {
            "line": 23,
            "character": 1
        }
    }
}


[Trace - 9:31:00 AM] Sending notification 'textDocument/didSave'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    }
}


[Trace - 9:31:00 AM] Sending notification 'workspace/didChangeWatchedFiles'.
Params: {
    "changes": [
        {
            "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
            "type": 2
        }
    ]
}


[Trace - 9:31:37 AM] Sending request 'textDocument/codeAction - (13)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 12,
            "character": 22
        },
        "end": {
            "line": 13,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:31:37 AM] Received response 'textDocument/codeAction - (13)' in 6ms.
Result: []


[Trace - 9:31:49 AM] Sending request 'textDocument/codeAction - (14)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:31:49 AM] Received response 'textDocument/codeAction - (14)' in 1ms.
Result: []


[Trace - 9:31:49 AM] Sending request 'textDocument/codeAction - (15)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 12,
            "character": 22
        },
        "end": {
            "line": 13,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:31:49 AM] Received response 'textDocument/codeAction - (15)' in 1ms.
Result: []


[Trace - 9:31:54 AM] Sending request 'textDocument/codeAction - (16)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 23,
            "character": 1
        },
        "end": {
            "line": 23,
            "character": 1
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:31:54 AM] Received response 'textDocument/codeAction - (16)' in 2ms.
Result: []


[Trace - 9:31:55 AM] Sending request 'textDocument/hover - (17)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 15,
        "character": 33
    }
}


[Trace - 9:31:55 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:31:55 AM] Received response 'textDocument/hover - (17)' in 28ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\n\nExpD [\n  Concurrency1\n]\n```"
    },
    "range": {
        "start": {
            "line": 15,
            "character": 8
        },
        "end": {
            "line": 15,
            "character": 45
        }
    }
}


[Trace - 9:31:58 AM] Sending request 'textDocument/codeAction - (18)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:31:58 AM] Received response 'textDocument/codeAction - (18)' in 1ms.
Result: []


[Trace - 9:31:58 AM] Sending request 'textDocument/codeAction - (19)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 23,
            "character": 1
        },
        "end": {
            "line": 23,
            "character": 1
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:31:58 AM] Received response 'textDocument/codeAction - (19)' in 1ms.
Result: []


[Trace - 9:32:01 AM] Sending request 'textDocument/hover - (20)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 3,
        "character": 10
    }
}


[Trace - 9:32:01 AM] Received response 'textDocument/hover - (20)' in 2ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\n\nDecField [\n  VarD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 3,
            "character": 2
        },
        "end": {
            "line": 3,
            "character": 21
        }
    }
}


[Trace - 9:32:02 AM] Sending request 'textDocument/hover - (21)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 2,
        "character": 11
    }
}


[Trace - 9:32:02 AM] Received response 'textDocument/hover - (21)' in 15ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nactor { claim : shared () -> async () }\n\n```\n\n---\n\n```motoko\n\nVarP [\n  \"ClaimReward\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 2,
            "character": 0
        },
        "end": {
            "line": 23,
            "character": 1
        }
    }
}


[Trace - 9:32:03 AM] Sending request 'textDocument/hover - (22)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 0,
        "character": 5
    }
}


[Trace - 9:32:03 AM] Received response 'textDocument/hover - (22)' in 2ms.
No result returned.


[Trace - 9:32:11 AM] Sending request 'textDocument/codeAction - (23)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:32:11 AM] Received response 'textDocument/codeAction - (23)' in 1ms.
Result: []


[Trace - 9:32:11 AM] Sending request 'textDocument/codeAction - (24)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 23,
            "character": 1
        },
        "end": {
            "line": 23,
            "character": 1
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:32:11 AM] Received response 'textDocument/codeAction - (24)' in 1ms.
Result: []


[Trace - 9:32:12 AM] Sending request 'textDocument/codeAction - (25)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 56
        },
        "end": {
            "line": 8,
            "character": 56
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:32:12 AM] Received response 'textDocument/codeAction - (25)' in 1ms.
Result: []


[Trace - 9:32:12 AM] Sending request 'textDocument/codeAction - (26)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 11,
            "character": 22
        },
        "end": {
            "line": 11,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:32:12 AM] Received response 'textDocument/codeAction - (26)' in 1ms.
Result: []


[Trace - 9:32:15 AM] Sending request 'textDocument/hover - (27)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 0,
        "character": 5
    }
}


[Trace - 9:32:15 AM] Received response 'textDocument/hover - (27)' in 1ms.
No result returned.


[Trace - 9:33:09 AM] Sending request 'textDocument/codeAction - (28)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:33:09 AM] Received response 'textDocument/codeAction - (28)' in 2ms.
Result: []


[Trace - 9:33:10 AM] Sending request 'textDocument/codeAction - (29)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 11,
            "character": 22
        },
        "end": {
            "line": 11,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:33:10 AM] Received response 'textDocument/codeAction - (29)' in 0ms.
Result: []


[Trace - 9:33:11 AM] Sending request 'textDocument/codeAction - (30)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 23,
            "character": 1
        },
        "end": {
            "line": 23,
            "character": 1
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:33:11 AM] Received response 'textDocument/codeAction - (30)' in 1ms.
Result: []


[Trace - 9:34:33 AM] Sending request 'textDocument/codeAction - (31)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:33 AM] Received response 'textDocument/codeAction - (31)' in 3ms.
Result: []


[Trace - 9:34:33 AM] Sending request 'textDocument/codeAction - (32)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 23,
            "character": 1
        },
        "end": {
            "line": 23,
            "character": 1
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:33 AM] Received response 'textDocument/codeAction - (32)' in 1ms.
Result: []


[Trace - 9:34:36 AM] Sending request 'textDocument/codeAction - (33)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 22
        },
        "end": {
            "line": 4,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:36 AM] Received response 'textDocument/codeAction - (33)' in 0ms.
Result: []


[Trace - 9:34:37 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 3
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 12);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:34:37 AM] Sending request 'textDocument/codeAction - (34)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 21
        },
        "end": {
            "line": 4,
            "character": 21
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:37 AM] Received response 'textDocument/codeAction - (34)' in 1ms.
Result: []


[Trace - 9:34:37 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:34:37 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": [
        {
            "source": "Motoko",
            "severity": 1,
            "range": {
                "start": {
                    "line": 6,
                    "character": 2
                },
                "end": {
                    "line": 6,
                    "character": 8
                }
            },
            "message": "unexpected token 'assert', expected one of token or <phrase> sequence:\n  }\n  <typ_args>?\n  <binop> <exp(ob)>\n  ; seplist(<dec_field>,<semicolon>)\n  or <exp_bin(ob)>\n  <unassign> <exp(ob)>\n  implies <exp_bin(ob)>\n  <relop> <exp_bin(ob)>\n  . <id>\n  : <typ_nobin>\n  -> <typ_nobin>\n  <binop> <exp_bin(ob)>\n  <binassign> <exp(ob)>\n  and <exp_bin(ob)>\n  <unop> <exp_bin(ob)>"
        }
    ]
}


[Trace - 9:34:38 AM] Sending request 'textDocument/codeAction - (35)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 21
        },
        "end": {
            "line": 4,
            "character": 21
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:38 AM] Received response 'textDocument/codeAction - (35)' in 1ms.
Result: []


[Trace - 9:34:41 AM] Sending request 'textDocument/hover - (36)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 6,
        "character": 3
    }
}


[Trace - 9:34:41 AM] Received response 'textDocument/hover - (36)' in 35ms.
No result returned.


[Trace - 9:34:42 AM] Sending request 'textDocument/codeAction - (37)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 2
        },
        "end": {
            "line": 6,
            "character": 8
        }
    },
    "context": {
        "diagnostics": [
            {
                "range": {
                    "start": {
                        "line": 6,
                        "character": 2
                    },
                    "end": {
                        "line": 6,
                        "character": 8
                    }
                },
                "message": "unexpected token 'assert', expected one of token or <phrase> sequence:\n  }\n  <typ_args>?\n  <binop> <exp(ob)>\n  ; seplist(<dec_field>,<semicolon>)\n  or <exp_bin(ob)>\n  <unassign> <exp(ob)>\n  implies <exp_bin(ob)>\n  <relop> <exp_bin(ob)>\n  . <id>\n  : <typ_nobin>\n  -> <typ_nobin>\n  <binop> <exp_bin(ob)>\n  <binassign> <exp(ob)>\n  and <exp_bin(ob)>\n  <unop> <exp_bin(ob)>",
                "severity": 1,
                "source": "Motoko"
            }
        ],
        "only": [
            "quickfix"
        ],
        "triggerKind": 1
    }
}


[Trace - 9:34:42 AM] Received response 'textDocument/codeAction - (37)' in 2ms.
Result: []


[Trace - 9:34:44 AM] Sending request 'textDocument/codeAction - (38)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 7,
            "character": 61
        },
        "end": {
            "line": 7,
            "character": 61
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:44 AM] Received response 'textDocument/codeAction - (38)' in 2ms.
Result: []


[Trace - 9:34:45 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 4
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 12);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:34:45 AM] Sending request 'textDocument/codeAction - (39)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 22
        },
        "end": {
            "line": 4,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:45 AM] Received response 'textDocument/codeAction - (39)' in 1ms.
Result: []


[Trace - 9:34:45 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:34:45 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:34:45 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:34:45 AM] Sending request 'textDocument/codeAction - (40)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 22
        },
        "end": {
            "line": 4,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:34:45 AM] Received response 'textDocument/codeAction - (40)' in 1ms.
Result: []


[Trace - 9:34:45 AM] Sending notification 'textDocument/didSave'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    }
}


[Trace - 9:34:46 AM] Sending notification 'workspace/didChangeWatchedFiles'.
Params: {
    "changes": [
        {
            "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
            "type": 2
        }
    ]
}


[Trace - 9:35:14 AM] Sending request 'textDocument/codeAction - (41)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:35:14 AM] Received response 'textDocument/codeAction - (41)' in 2ms.
Result: []


[Trace - 9:35:15 AM] Sending request 'textDocument/codeAction - (42)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 22
        },
        "end": {
            "line": 4,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:35:15 AM] Received response 'textDocument/codeAction - (42)' in 0ms.
Result: []


[Trace - 9:35:17 AM] Sending request 'textDocument/codeAction - (43)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:35:17 AM] Received response 'textDocument/codeAction - (43)' in 0ms.
Result: []


[Trace - 9:36:17 AM] Sending request 'textDocument/codeAction - (44)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 33
        },
        "end": {
            "line": 8,
            "character": 33
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:17 AM] Received response 'textDocument/codeAction - (44)' in 1ms.
Result: []


[Trace - 9:36:20 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 6
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 13);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:36:20 AM] Sending request 'textDocument/codeAction - (45)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 33
        },
        "end": {
            "line": 8,
            "character": 33
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:20 AM] Received response 'textDocument/codeAction - (45)' in 1ms.
Result: []


[Trace - 9:36:20 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:36:20 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:36:20 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:36:21 AM] Sending notification 'textDocument/didSave'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    }
}


[Trace - 9:36:21 AM] Sending notification 'workspace/didChangeWatchedFiles'.
Params: {
    "changes": [
        {
            "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
            "type": 2
        }
    ]
}


[Trace - 9:36:33 AM] Sending request 'textDocument/codeAction - (46)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:33 AM] Received response 'textDocument/codeAction - (46)' in 1ms.
Result: []


[Trace - 9:36:34 AM] Sending request 'textDocument/codeAction - (47)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 33
        },
        "end": {
            "line": 8,
            "character": 33
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:34 AM] Received response 'textDocument/codeAction - (47)' in 1ms.
Result: []


[Trace - 9:36:34 AM] Sending request 'textDocument/codeAction - (48)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 11,
            "character": 22
        },
        "end": {
            "line": 11,
            "character": 22
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:34 AM] Received response 'textDocument/codeAction - (48)' in 0ms.
Result: []


[Trace - 9:36:36 AM] Sending request 'textDocument/codeAction - (49)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 32
        },
        "end": {
            "line": 8,
            "character": 32
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:36 AM] Received response 'textDocument/codeAction - (49)' in 1ms.
Result: []


[Trace - 9:36:37 AM] Sending request 'textDocument/hover - (50)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 55
    }
}


[Trace - 9:36:37 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:36:37 AM] Received response 'textDocument/hover - (50)' in 12ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nactor { claim : shared () -> async () }\n\n```\n\n---\n\n```motoko\n\nVarP [\n  \"ClaimReward\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 2,
            "character": 0
        },
        "end": {
            "line": 23,
            "character": 1
        }
    }
}


[Trace - 9:36:37 AM] Sending request 'textDocument/hover - (51)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 4,
        "character": 12
    }
}


[Trace - 9:36:37 AM] Received response 'textDocument/hover - (51)' in 1ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\n\nDecField [\n  VarD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 4,
            "character": 2
        },
        "end": {
            "line": 4,
            "character": 21
        }
    }
}


[Trace - 9:36:38 AM] Sending request 'textDocument/hover - (52)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 3,
        "character": 11
    }
}


[Trace - 9:36:38 AM] Received response 'textDocument/hover - (52)' in 1ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\n\nDecField [\n  VarD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 3,
            "character": 2
        },
        "end": {
            "line": 3,
            "character": 21
        }
    }
}


[Trace - 9:36:40 AM] Sending request 'textDocument/hover - (53)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 37
    }
}


[Trace - 9:36:40 AM] Received response 'textDocument/hover - (53)' in 12ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nactor { claim : shared () -> async () }\n\n```\n\n---\n\n```motoko\n\nVarP [\n  \"ClaimReward\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 2,
            "character": 0
        },
        "end": {
            "line": 23,
            "character": 1
        }
    }
}


[Trace - 9:36:42 AM] Sending request 'textDocument/hover - (54)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 7,
        "character": 32
    }
}


[Trace - 9:36:42 AM] Received response 'textDocument/hover - (54)' in 0ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 34
        }
    }
}


[Trace - 9:36:42 AM] Sending request 'textDocument/codeAction - (55)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 7,
            "character": 33
        },
        "end": {
            "line": 7,
            "character": 33
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:42 AM] Received response 'textDocument/codeAction - (55)' in 0ms.
Result: []


[Trace - 9:36:42 AM] Sending request 'textDocument/hover - (56)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 7,
        "character": 53
    }
}


[Trace - 9:36:42 AM] Received response 'textDocument/hover - (56)' in 1ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 34
        }
    }
}


[Trace - 9:36:43 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 8
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 1) // initially synchronized\n   and (count == 0 or count == 13);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:36:43 AM] Sending request 'textDocument/codeAction - (57)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 7,
            "character": 34
        },
        "end": {
            "line": 7,
            "character": 34
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:43 AM] Received response 'textDocument/codeAction - (57)' in 0ms.
Result: []


[Trace - 9:36:44 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:36:44 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:36:44 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:36:44 AM] Sending notification 'textDocument/didSave'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    }
}


[Trace - 9:36:44 AM] Sending notification 'workspace/didChangeWatchedFiles'.
Params: {
    "changes": [
        {
            "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
            "type": 2
        }
    ]
}


[Trace - 9:36:53 AM] Sending request 'textDocument/codeAction - (58)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:53 AM] Received response 'textDocument/codeAction - (58)' in 1ms.
Result: []


[Trace - 9:36:53 AM] Sending request 'textDocument/codeAction - (59)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 7,
            "character": 34
        },
        "end": {
            "line": 7,
            "character": 34
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:53 AM] Received response 'textDocument/codeAction - (59)' in 1ms.
Result: []


[Trace - 9:36:55 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 10
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 13);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:36:55 AM] Sending request 'textDocument/codeAction - (60)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 7,
            "character": 34
        },
        "end": {
            "line": 7,
            "character": 34
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:55 AM] Received response 'textDocument/codeAction - (60)' in 1ms.
Result: []


[Trace - 9:36:55 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:36:55 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:36:55 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:36:56 AM] Sending request 'textDocument/codeAction - (61)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 33
        },
        "end": {
            "line": 8,
            "character": 33
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:56 AM] Received response 'textDocument/codeAction - (61)' in 2ms.
Result: []


[Trace - 9:36:56 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 12
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == );  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:36:56 AM] Sending request 'textDocument/codeAction - (62)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 31
        },
        "end": {
            "line": 8,
            "character": 31
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:56 AM] Received response 'textDocument/codeAction - (62)' in 2ms.
Result: []


[Trace - 9:36:56 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:36:56 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": [
        {
            "source": "Motoko",
            "severity": 1,
            "range": {
                "start": {
                    "line": 8,
                    "character": 31
                },
                "end": {
                    "line": 8,
                    "character": 32
                }
            },
            "message": "unexpected token ')', expected one of token or <phrase> sequence:\n  <exp_bin(ob)>"
        }
    ]
}


[Trace - 9:36:57 AM] Sending notification 'textDocument/didChange'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
        "version": 13
    },
    "contentChanges": [
        {
            "text": "// @verify\n\nactor ClaimReward {\n  var claimed = false;\n  var count = 0 : Int;\n  \n  assert:invariant \n   (not claimed implies count == 0) // initially synchronized\n   and (count == 0 or count == 1);  // reward is unique\n\n  public shared func claim() : async () {\n    if (not claimed) {\n      claimed := true;\n\n      await async {\n        assert:1:async claimed and count == 0;\n\n        // (send reward)\n\n        count += 1;\n      };\n    };\n  };\n}"
        }
    ]
}


[Trace - 9:36:57 AM] Sending request 'textDocument/codeAction - (63)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 32
        },
        "end": {
            "line": 8,
            "character": 32
        }
    },
    "context": {
        "diagnostics": [
            {
                "range": {
                    "start": {
                        "line": 8,
                        "character": 31
                    },
                    "end": {
                        "line": 8,
                        "character": 32
                    }
                },
                "message": "unexpected token ')', expected one of token or <phrase> sequence:\n  <exp_bin(ob)>",
                "severity": 1,
                "source": "Motoko"
            }
        ],
        "triggerKind": 2
    }
}


[Trace - 9:36:57 AM] Received response 'textDocument/codeAction - (63)' in 1ms.
Result: []


[Trace - 9:36:57 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:36:57 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
}


~ /home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo
[Trace - 9:36:57 AM] Received notification 'textDocument/publishDiagnostics'.
Params: {
    "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
    "diagnostics": []
}


[Trace - 9:36:57 AM] Sending request 'textDocument/codeAction - (64)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 32
        },
        "end": {
            "line": 8,
            "character": 32
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:36:57 AM] Received response 'textDocument/codeAction - (64)' in 1ms.
Result: []


[Trace - 9:36:57 AM] Sending notification 'textDocument/didSave'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    }
}


[Trace - 9:36:58 AM] Sending notification 'workspace/didChangeWatchedFiles'.
Params: {
    "changes": [
        {
            "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo",
            "type": 2
        }
    ]
}


[Trace - 9:37:09 AM] Sending request 'textDocument/codeAction - (65)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 0,
            "character": 0
        },
        "end": {
            "line": 0,
            "character": 0
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:37:09 AM] Received response 'textDocument/codeAction - (65)' in 1ms.
Result: []


[Trace - 9:37:09 AM] Sending request 'textDocument/codeAction - (66)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 8,
            "character": 32
        },
        "end": {
            "line": 8,
            "character": 32
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:37:09 AM] Received response 'textDocument/codeAction - (66)' in 1ms.
Result: []


[Trace - 9:37:11 AM] Sending request 'textDocument/hover - (67)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 19
    }
}


[Trace - 9:37:11 AM] Sending notification '$/cancelRequest'.
Params: {
    "id": 67
}


[Trace - 9:37:11 AM] Received notification 'window/logMessage'.
Params: {
    "type": 4,
    "message": "Parsed typed AST"
}


Parsed typed AST
[Trace - 9:37:11 AM] Received response 'textDocument/hover - (67)' in 32ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:37:11 AM] Sending request 'textDocument/hover - (68)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 24
    }
}


[Trace - 9:37:11 AM] Received response 'textDocument/hover - (68)' in 2ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:37:12 AM] Sending request 'textDocument/hover - (69)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 24
    }
}


[Trace - 9:37:12 AM] Received response 'textDocument/hover - (69)' in 2ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:37:13 AM] Sending request 'textDocument/hover - (70)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 23
    }
}


[Trace - 9:37:13 AM] Received response 'textDocument/hover - (70)' in 2ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:37:14 AM] Sending request 'textDocument/hover - (71)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "position": {
        "line": 8,
        "character": 22
    }
}


[Trace - 9:37:14 AM] Received response 'textDocument/hover - (71)' in 2ms.
Result: {
    "contents": {
        "kind": "markdown",
        "value": "```motoko\nassert:invariant\n```\n\n---\n\n```motoko\n\nDecField [\n  ExpD\n  \"Private\"\n  \"(Flexible)\"\n]\n```"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 0
        },
        "end": {
            "line": 8,
            "character": 33
        }
    }
}


[Trace - 9:37:17 AM] Sending request 'textDocument/codeAction - (72)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tanguy/MotokoSanSandbox/src/MotokoSanSandbox_backend/main.mo"
    },
    "range": {
        "start": {
            "line": 23,
            "character": 1
        },
        "end": {
            "line": 23,
            "character": 1
        }
    },
    "context": {
        "diagnostics": [],
        "triggerKind": 2
    }
}


[Trace - 9:37:17 AM] Received response 'textDocument/codeAction - (72)' in 1ms.
Result: []
